name: example_100

on:
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  TF_VAR_subscription_id_hub: ${{ secrets.TF_VAR_SUBSCRIPTION_ID_HUB }}
  TF_VAR_subscription_id: ${{ secrets.TF_VAR_SUBSCRIPTION_ID }}
  #GIT_PAT: ${{ secrets.GIT_PAT }}
  SETTINGS_SOURCE_FOLDER: ../examples/100/settings
  SETTINGS_TARGET_FOLDER: ./settings
  
jobs:
  run-terraform:
    runs-on: ubuntu-latest
    steps:

      ##########################
      # Preparing
      ##########################
      # https://github.tools.sap/ghcom-actions/actions-checkout
      - name: Preparing - Github - checkout respository     
        uses: actions/checkout@v3

      # https://github.com/hashicorp/setup-terraform
      - name: Preparing - Terraform - install CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false

      # https://github.com/actions/setup-go
      - name: Preparing - Go - install Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20.1'

      - name: Preparing - Go - miscellaneous
        working-directory: test
        run: |
          go env -w GOPATH=$HOME/go
          go mod init "github.com/rigydi/${GITHUB_REPOSITORY#*/}"
          go mod tidy
      
      # PAT token for downloading TF Modules from other own Git Repos
      #- name: Preparing - Git - PAT for Terratest
      #  run: |
      #    git config --global url."https://${{ secrets.GIT_PAT }}@github.com".insteadOf https://github.com

      - name: Preparing - Terraform Files - example-100
        working-directory: test
        run: |
          cp -av $SETTINGS_SOURCE_FOLDER .
          mv $SETTINGS_SOURCE_FOLDER/terraform.tfvars .

      ##########################
      # Static Code Analysis
      ##########################
 
      - name: Static Code Analysis - Terraform - format
        working-directory: test
        run: |
          terraform fmt
 
      - name: Static Code Analysis - Terraform - init
        working-directory: test
        run: |
          terraform init -input=false
 
      - name: Static Code Analysis - Terraform - validate
        working-directory: test
        run: |
          terraform validate -no-color
      
      ##########################
      # Unit Test
      ##########################

      - name: Unit Test - Terratest - apply and destroy
        working-directory: test
        run: go test -v -timeout 30m .